{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nlet initialState = {\n  value: []\n};\nexport const Todo = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    removeTodo: (state, action) => {\n      state.value = state.value.filter((todo, index) => todo !== action.payload);\n    }\n  }\n});\nexport const {\n  addTodo,\n  removeTodo\n} = Todo.actions;\nexport default Todo.reducer;","map":{"version":3,"names":["createSlice","initialState","value","Todo","name","reducers","addTodo","state","action","push","payload","removeTodo","filter","todo","index","actions","reducer"],"sources":["C:/Users/ACER/OneDrive/Desktop/todo project/todo-list/src/Redux/Slices/Todo.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nlet initialState = {\r\n  value:[]\r\n};\r\n\r\nexport const Todo = createSlice({\r\n  name: 'todos',\r\n  initialState,\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n        state.push(action.payload);\r\n    },\r\n    removeTodo: (state, action) => {\r\n      state.value = state.value.filter((todo, index) => todo !== action.payload);\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addTodo, removeTodo } = Todo.actions;\r\nexport default Todo.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,YAAY,GAAG;EACjBC,KAAK,EAAC;AACR,CAAC;AAED,OAAO,MAAMC,IAAI,GAAGH,WAAW,CAAC;EAC9BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACU,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,KAAKL,MAAM,CAACE,OAAO,CAAC;IAC5E;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,OAAO;EAAEK;AAAW,CAAC,GAAGR,IAAI,CAACY,OAAO;AACnD,eAAeZ,IAAI,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
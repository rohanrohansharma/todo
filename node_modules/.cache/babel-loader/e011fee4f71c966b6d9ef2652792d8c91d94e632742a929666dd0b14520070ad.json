{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  value: []\n};\nexport const Todo = createSlice({\n  // name \n  name: \"todos\",\n  // initial state\n  initialState,\n  // reducers\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    removeTodo: (state, action) => {\n      state = state.filter(todo => todo.id !== action.payload);\n    }\n  }\n});\nconst {\n  addTodo,\n  removeTodo\n} = Todo.actions;\nexport default Todo.reducer;","map":{"version":3,"names":["createSlice","initialState","value","Todo","name","reducers","addTodo","state","action","push","payload","removeTodo","filter","todo","id","actions","reducer"],"sources":["C:/Users/ACER/OneDrive/Desktop/todo project/todo-list/src/Redux/Slices/Todo.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState={\r\n    value:[]\r\n}\r\n\r\nexport const Todo = createSlice({\r\n    // name \r\n    name:\"todos\",\r\n    // initial state\r\n    initialState,\r\n    // reducers\r\n    reducers:{\r\n        addTodo:(state,action)=>{\r\n            state.push(action.payload);\r\n        },\r\n        removeTodo:(state,action)=>{\r\n            state=state.filter((todo)=>todo.id!==action.payload);\r\n        }\r\n    }\r\n})\r\n\r\nconst {addTodo , removeTodo} = Todo.actions;\r\nexport default Todo.reducer;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC;AACV,CAAC;AAED,OAAO,MAAMC,IAAI,GAAGH,WAAW,CAAC;EAC5B;EACAI,IAAI,EAAC,OAAO;EACZ;EACAH,YAAY;EACZ;EACAI,QAAQ,EAAC;IACLC,OAAO,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,UAAU,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAG;MACvBD,KAAK,GAACA,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAGN,MAAM,CAACE,OAAO,CAAC;IACxD;EACJ;AACJ,CAAC,CAAC;AAEF,MAAM;EAACJ,OAAO;EAAGK;AAAU,CAAC,GAAGR,IAAI,CAACY,OAAO;AAC3C,eAAeZ,IAAI,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}